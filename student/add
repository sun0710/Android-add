/~~
#include<stdio.h>
#include<stdlib.h>
struct student_info
{
    char  stu_name;
    int   stu_id;
    char  stu_sex;
    short stu_age;

    struct student_info  *next;
};
    struct student_info *p_head;


    void print_item();
    int get_choose();
    int sum_node(struct student_info *p_head);

     void print_student_info(struct student_info *p_head);

      void insert_student_info(struct student_info *p_head,int pos);

       void del_student_info(struct student_info *p_head,int pos);

       void search_student_info(struct student_info *p_head,char stu_name);

        void change_student_info(struct student_info *p_head,int pos);


    int main(int arge,char* argv[])
    {
        puts("\t管理系统\n\n");
        p_head =(struct student_info*)malloc(sizeof(struct student_info));
        //构造链表头
        p_head->next = NULL;
        print_item();
        printf("\n");
        int choose = 0;
        int pos = 0;
        choose = get_choose();
        while(choose >= 1 && choose <= 6)
        {
            switch(choose)
            {
                //1.查看所有学生信息
            case 1:   print_student_info( p_head);
                      printf("\n");
                break;
                //2.插入学生信息
            case 2:    puts("添加信息到那个位置？");
                    scanf("%d",&pos);
                    insert_student_info(p_head,pos);
                    printf("\n");
                break;
                //3.删除学生信息
            case 3:  puts("删除那一个位置的结点？");
                    scanf("%d",&pos);
                    del_student_info(p_head,pos);
                    printf("\n");
                break;
                //4.查找学生信息
            case 4:  puts("输入要查找学生的姓名：");
                    char c;
                    getchar();
                    scanf("%c",&c);
                    search_student_info(p_head,c);
                    printf("\n");
                break;
            case 5:   puts("输入要修改学生的位置");
                      scanf("%d",&pos);
                      change_student_info(p_head,pos);
                      printf("\n");
               break;
            }
            if(choose == 6)
            {
                puts("--退出系统--");
                printf("\n");
                break;
            }
            choose = get_choose();
        }
        printf("\n");
        return 0;
    }

    void print_item()
    {
        puts("  1.查看所有学生信息");
        puts("  2.添加学生信息");
        puts("  3.删除学生信息");
        puts("  4.查找学生信息");
        puts("  5.修改学生信息");
        puts("  6.退出系统");
    }



    int get_choose()
    {
        int choose_item = 0;
        printf("您的选择是:");
        scanf("%d",&choose_item);
        if(choose_item >= 1  &&  choose_item <= 6)
        return choose_item;
        else
        {
            printf("--输入有误--");
            return 7;
        }
    }




    void print_student_info(struct student_info *p_head)
    {
        struct student_info *p;
        p = p_head->next;
        int count = 0;
        while(p)
        {
            puts("姓名\t学号\t性别\t年龄");
            printf("%c\t%d\t%d\n",p->stu_name,p->stu_id,p->stu_sex,p->stu_age);
            count++;
            p = p->next;
        }
        if(count == 0)
        {
            puts("--当前没有学生信息--");
            return;
        }
        puts("--以上是全部学生信息--");
    }



        int sum_node(struct student_info *p_head)
        {
            int count = 0;
            struct student_info *p;
            p = p_head->next;
            while(p)
            {
                count++;
                p = p->next;
            }
            return count;
        }


        void insert_student_info(struct student_info *p_head,int pos)
        {
            struct student_info *p_new;
            p_new = (struct student_info *)malloc(sizeof(struct student_info));
            if(p_new != NULL)
            {
                puts("请依次输入：姓名，学号，性别，年龄");
                scanf("%c %d %c %d",&(p_new->stu_name),&(p_new->stu_id),&(p_new->stu_sex),&(p_new->stu_age));
            }
            else
            {
                puts("--添加数据失败--");
            }
            int count_node;
            count_node = sum_node(p_head);
            int min;
                struct student_info*p_front;
                p_front = p_head;
                int i;
                 if(count_node < pos)
                min = count_node;
                else
                    min = pos-1;
                for( i = 1;i <= min;i++)
                {
                    p_front = p_front->next;
                }
                p_new->next = p_front->next;
                p_front->next = p_new;
                printf("--------------------    %c",p_new->stu_name);
                puts("--添加数据成功--");

        }


              void del_student_info(struct student_info *p_head,int pos)
             {
                 int count_node;
                 count_node = sum_node(p_head);
                 if(count_node < pos)
                 {
                     puts("--当前位置没有学生信息--");
                 }
                 else
                    {
                        struct student_info*p_front,*p_del;
                        p_front = p_head;
                       int i;
                        for(i = 1;i <= pos-1;i++)
                        {
                            p_front = p_front->next;
                        }
                        p_del = p_front->next;
                        p_front->next = p_del->next;
                        puts("--删除成功--");
                    }
             }


             void search_student_info(struct student_info *p_head,char stu_name)
             {
                 struct student_info*p;
                 p = p_head;
                 int count_node;
                 count_node = sum_node(p_head);
                 int i = 0;
                 for(i = 1;i <= count_node;i++)
                 {
                     p = p->next;
                     if(p->stu_name == stu_name)
                     {
                         puts("姓名\t学号\t性别\t年龄");
                         printf("%c\t%d\t%c\t%d\n",p->stu_name,p->stu_id,p->stu_sex,p->stu_age);
                         puts("--以上是找到的学生信息--");
                         return;
                     }
                 }
                 if(i == count_node + 1)
                    puts("--没有这个学生的信息--");
             }




             void change_student_info(struct student_info *p_head,int pos)
             {
                 struct student_info*p;
                 p = p_head;
                 int count_node;
                 count_node = sum_node(p_head);
                 if(count_node < pos)
                 {
                     puts("--这个位置没有学生信息--");
                     return ;
                 }
                 int i;
                 for(i = 1;i <= pos;i++)

                     p = p->next;
                     puts("选择要修改的编号：\n1.姓名 2.学号 3.性别 4.年龄");
                     int num;
                     scanf("%d",&num);
                     switch(num)
                            {
                                case 1:
                                    printf("输入姓名：");
                                    scanf("%c",&p->stu_name);
                                    break;
                                case 2:
                                    printf("输入学号：");
                                    scanf("%d",&p->stu_id);
                                    break;
                                case 3:
                                    printf("输入性别：");
                                    scanf("%c",&p->stu_sex);
                                    break;
                                case 4:
                                    printf("输入年龄：");
                                    scanf("%d",&p->stu_age);
                                    break;
                            }
                                puts("--修改成功--");
             }








